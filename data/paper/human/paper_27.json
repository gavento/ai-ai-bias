{
    "item_type": "paper",
    "abstract": " phylogenetic networks are mathematical structures for modeling and visualization of reticulation processes in the study of evolution . \n galled networks , reticulation visible networks , nearly - stable networks and stable - child networks are the four classes of phylogenetic networks that are recently introduced to study the topological and algorithmic aspects of phylogenetic networks . \n we prove the following results .    * \n a binary galled network with @xmath0 leaves has at most @xmath1 reticulation nodes . * \n a binary nearly - stable network with @xmath0 leaves has at most @xmath2 reticulation nodes . * \n a binary stable - child network with @xmath0 leaves has at most @xmath3 reticulation nodes . ",
    "article": "reticulation processes refer to the transfer of genetic material between living organisms in a non - reproduction manner .\nhorizontal gene transfer is believed to be a highly significant reticulation process occurring between single - cell organisms ( doolittle and bapteste 2007 ; treangen and rocha 2011 ) .\nother reticulation processes include introgression , recombination and hybridization ( fontaine et al .\n2015 ; mcbreen and lockhart 2006 ; marcussen et al .\n2014 ) . in the past two decades , phylogenetic networks\nhave often been seen for the modeling and visualization of reticulation processes ( gusfield 2014 ; huson et al .\n2011 ) .\ngalled trees , galled networks , reticulation visible networks are three of the popular classes of phylogenetic networks introduced to study the combinatorial and algorithmic perspectives of phylogenetics ( wang et al .\n2001 ; gusfield et al .\n2004 ; huson and kloepper 2007 ; huson et al . 2011 ) .\nreticulation visible networks include galled trees and galled networks .\nthey are tree - based ( gambette et al . 2015 ) .\nthe tree - based networks are introduced by francis and steel ( 2015 ) recently .\nit is well known that the number of internal nodes in a phylogenetic tree with @xmath0 leaves is @xmath4 .\nin contrast , an arbitrary phylogenetic network with 2 leaves can have as many internal nodes as possible .\ntherefore , one interesting research problem is how large a phylogenetic network in a particular class can be .\nfor example , it is well known that a tree - child network with @xmath0 leaves has @xmath2 non - leaf nodes at most .\na regular network with @xmath0 leaves has @xmath5 nodes at most ( willson 2010 ) . to investigate whether or not the tree containment problem is polynomial time solvable , surprisingly , gambette et al .\n( 2015 ) proved that a reticulation visible network with @xmath0 leaves has at most @xmath6 non - leaf nodes .\nthe class of nearly - stable networks was also introduced in their paper .\nthey also proved the existence of a linear upper bound on the number of reticulation nodes in a nearly - stable network .    in the present paper , we establish the tight upper bound for the size of a network defined by a visibility property using a sub - tree technique that was introduced in gambette et al .\nthe rest of this paper is divided into six sections .\nsection  [ sec : basic ] introduces concepts and notation that are necessary for our study .\nrecently , bordewich and semple ( 2015 ) proved that there are at most @xmath2 reticulation nodes in a reticulation visible network .\nin section  [ sec : stable ] , we present a different proof of the @xmath2 tight bound for reticulation visible networks .\nsection  [ sec : galled ] proves that there are at most @xmath1 reticulation nodes in a galled networks with @xmath0 leaves .\nsection [ sec : nearlystable ] and [ sec : stablechild ] establish the tight upper bounds for the sizes of nearly - stable and stable - child networks , respectively . in section  [ conc ]\n, we conclude the work with a few remarks .\nan acyclic digraph is a simple connected digraph with no directed cycles .\nlet @xmath7 be an acyclic digraph and let @xmath8 and @xmath9 be two nodes in @xmath10 . if @xmath11 , it is called an _ outgoing _ edge of @xmath8 and _ incoming edge _ of @xmath9 ; @xmath8 and @xmath9 are said to be the tail and head of the edge .\nthe numbers of incoming and outgoing edges of a node are called its _ indegree _ and _ outdegree _ , respectively .\n@xmath10 is said to be _ rooted _ if there is a unique node @xmath12 with indegree 0 ; @xmath12 is called the _ root _ of @xmath10 .\nnote that in a rooted acyclic digraph there exists a directed path from the root to every other node .    for @xmath13\n, @xmath14 denotes the digraph with the same node set and the edge set @xmath15 . for @xmath16\n, @xmath17 denotes the digraph with the node set @xmath18 and the edge set @xmath19 .\nif @xmath20 and @xmath21 are subdigraphs of @xmath10 , @xmath22 denotes the subdigraph with the node set @xmath23 and the edge set @xmath24 .\na _ phylogenetic network _ on a finite set of taxa , @xmath25 , is a rooted acyclic digraph in which each non - root node has either indegree 1 or outdegree 1 and there are exactly @xmath26 nodes of outdegree 0 and indegree 1 , called _ leaves _ , that correspond one - to - one with the taxa in the network .    in a phylogenetic network , a node\nis called a _ tree node _ if it is either the root or a node having indegree one ; it is called a _ reticulation node _ if its indegree is greater than one .\nnote that leaves are tree nodes and a tree node may have both indegree and outdegree one .\na non - leaf node is said to be _\ninternal_. a phylogenetic network without reticulation nodes is simply a _\nphylogenetic tree_.    for a phylogenetic network @xmath27 , we use the following notation :    * @xmath28 : the root of @xmath27 .\n* @xmath29 : the set of nodes .\n* @xmath30 : the set of tree nodes .\n* @xmath31 : the set of reticulation nodes .\n* @xmath32 : the set of edges . *\n@xmath33 : the set of leaves .    for two nodes @xmath34 in @xmath29 , if @xmath35 , @xmath8 is said to be a _\nparent _ of @xmath9 and , equivalently , @xmath9 is a _ child _ of @xmath8 . in general ,\nif there is a directed path from @xmath8 to @xmath9 , @xmath8 is an _ ancestor _ of @xmath9 and @xmath9 is a _ descendant _ of @xmath8 .\nwe sometimes say that @xmath9 is below @xmath8 when @xmath8 is an ancestor of @xmath9 .\nlet @xmath36 and @xmath37 be two simple paths from @xmath8 to @xmath9 in @xmath27 .\nwe use @xmath38 and @xmath39 to denote their node sets , respectively .\nthey are _ internally disjoint _ if @xmath40 .\nfinally , a phylogenetic network is _ binary _ , if its root has outdegree 2 and indegree 0 , all internal nodes have degree 3 , and all the leaves have indegree one . here\n, we are interested in how large a binary phylogenetic network can be .    in the rest of the paper , a binary phylogenetic work\nis simply called a network and a phylogenetic tree a tree . for sake of convenience for discussion\n, we also add an open edge entering the root of a network .\na node @xmath9 in a network is _ visible _ ( or stable ) with respect to a leaf @xmath41 if @xmath9 is in every path from the network root to @xmath41 .\nwe say @xmath9 visible if it is visible with respect to some leaf in the network .\n[ prop1 ] let @xmath27 be a network and @xmath42 a subnetwork of @xmath27 with the same root and leaves as @xmath27 .\nthen , a node is visible in @xmath42 if it is visible in @xmath27 .\nequivalently , a node is not visible in @xmath27 if it is not visible in @xmath42 .\nsuppose @xmath43 is visible with respect to a leaf @xmath41 in @xmath27 .\nfor each path @xmath36 from @xmath44 to @xmath41 , since it is also a path from @xmath28 to @xmath41 in @xmath27 , it must pass through @xmath9 .\nthus , @xmath9 is also visible with respect to the same leaf in @xmath42 .\n_ reticulation visible _ networks are networks in which reticulation nodes are all visible ( huson et al .\nthey are also called stable networks by gambette et al .\n( 2015 ) .\na network is _ galled _ if every reticulation node @xmath45 has an ancestor @xmath46 such that there are two disjoint tree paths from @xmath46 to @xmath45 ( huson and kloepper 2007 ) . here\n, a path is tree path if its internal nodes are all tree nodes in the network .\ngalled networks are reticulation visible and are also known as level-1 networks .\n_ nearly - stable _ networks are networks in which for every pair of nodes @xmath8 and @xmath9 , either @xmath8 or @xmath9 is visible if @xmath47 is an edge ( gambette et al .\n2015 ) .\n_ stable - child _ networks are networks in which every node has a visible child .\ntree - based networks comprise another interesting class of networks that is introduced recently ( francis and steel 2015 ) .\na network is _ tree - based _ if it can be obtained from a tree with the same leaves by the insertion of a set of edges between different edges in the tree .\n[ stable_1 ] ( gambette et al . 2015 ) for every reticulation - visible network @xmath27 , there exists a subset of edges @xmath48 such that @xmath49 contains exactly an incoming edge for each reticulation node and @xmath50 is a subtree with the same leaves as @xmath27 .\ntheorem  [ stable_1 ] indicates that every reticulation visible network is tree - based .\nhowever , nearly - stable networks and stable - child networks are not necessarily tree - based .\nwe finish this section by presenting a technical lemma that will frequently be used in establishing the tight upper bound on the size of a network in each of the four classes defined above .\n[ lemma22 ] let @xmath27 be a network , @xmath51 , and @xmath52 be a finite set of reticulation nodes below @xmath8 .\nif each @xmath53 has a parent @xmath54 such that either ( a ) @xmath54 is below another @xmath55 in @xmath52 , or ( b ) there is a path from @xmath56 to @xmath54 that avoids @xmath8 , then there exists a path from @xmath56 to @xmath41 avoiding @xmath8 for every leaf @xmath41 below a reticulation node @xmath53 .\nlet @xmath57 .\nassume @xmath41 is below some @xmath58 .\nthen , there is a path @xmath59 from @xmath60 to @xmath41 that avoids @xmath8 .\nsince @xmath52 is finite and @xmath27 is acyclic , there exists a series of reticulation nodes , @xmath61 such that :    \\(i ) each @xmath62 has a parent @xmath63 below @xmath64 for @xmath65 , and    \\(ii ) the node @xmath66 has a parent @xmath67 such that there is a path @xmath68 from @xmath28 to @xmath67 that avoids @xmath8 .\nsince @xmath63 is below @xmath64 , there exists a path @xmath69 from @xmath64 to @xmath70 for each @xmath71 .\nsince @xmath27 is acyclic and @xmath64 is below @xmath8 , the path @xmath69 avoids @xmath8 .\nconcatenating these paths , we obtain the following path @xmath72 from @xmath73 to @xmath41 that avoids @xmath8 .\ngambette et al . ( 2015 ) proved that there are at most @xmath74 reticulation nodes in a reticulation visible network with @xmath0 labeled leaves . on the other hand ,\nthere are as many as @xmath2 reticulations in the reticulation visible network in figure  [ fig1 ] .\nso , what is the tight upper bound on the number of reticulation nodes ?\ninterestingly , @xmath2 is the tight upper bound , which was independently proved by bordewich and semple ( 2015 ) using the induction approach . here , we present an alternative proof to illustrate our approach .     are of degree 3 [ fig1],scaledwidth=80.0% ]    given a reticulation visible network @xmath27 with @xmath0 leaves , we let @xmath49 be a set of edges such that @xmath50 is a subtree with the same root and leaves as @xmath27 ( theorem  [ stable_1 ] ) . since @xmath50 has @xmath0 leaves , there are exactly @xmath4 nodes of degree 3 . thus , there are @xmath75 paths whose internal nodes are of degree 2 , starting at a degree-3 node and terminating at either another node of degree 3 or a leaf .\nlet these @xmath75 paths be @xmath76 .\nthe edges of @xmath50 not in @xmath77 make up a path @xmath78 that contains the root @xmath56 ( figure  [ fig1 ] ) .\nif @xmath56 is of degree 2 , @xmath78 passes through @xmath28 and terminates at a degree-3 node .\nif @xmath28 is of degree 3 , @xmath78 is simply the open edge entering @xmath56 .\naltogether , these @xmath79 paths are called the _ trivial paths _ of @xmath50 .\nnote that @xmath80 .\nit is not hard to see that , for each edge in @xmath49 , its head and tail are both found in these trivial paths .\nan edge @xmath81 is called a _ cross _\nedge if @xmath82 and @xmath83 for @xmath84 ; it is called _ non - cross _ edge otherwise . the facts in the following proposition appear in the proof of theorem 1 in gambette et al ( 2015 ) .    [ 31 ]    * no two cross edges @xmath85 have their heads in the same trivial path in @xmath50 .\n* for each non - cross edge @xmath47 such that @xmath86 for some @xmath87 , there are at least one cross edge @xmath88 such that @xmath89 is between @xmath8 and @xmath9 in @xmath90 .    for a cross edge @xmath47 such that @xmath82 and @xmath83(@xmath91 )\n, we say @xmath47 _ leaves _ @xmath90 and _ enters _ @xmath92 . for a non - cross path @xmath47 and a cross edge\n@xmath93 , if @xmath8 and @xmath9 are in @xmath94 and @xmath89 is a node between @xmath8 and @xmath9 in @xmath90 , we say @xmath47 _ jumps over _ @xmath93 .\nit is trivial to see that no cross edge enters the trivial path @xmath78 .\nproposition  [ 31 ] suggests that @xmath49 contains at most @xmath75 cross edges and thus at most @xmath75 non - cross edges . by theorem  [ stable_1 ] , @xmath95 .    to obtain the tight upper bound @xmath96 for @xmath97\n, we define the cost @xmath98 of a cross edge @xmath85 as : @xmath99 we will charge the cost of a cross edge to the trivial path it enters and call it the _ weight _ of the trivial path .\nif no cross edge enters a trivial path , the weight of this trivial path is set to be 0 . by proposition\n[ 31 ] , the weight of a trivial path is at most 2 .\nwe use @xmath100 to denote the weight of a trivial path @xmath90 , @xmath101 .    .\n@xmath102 are the three trivial paths incident to a degree-3 node @xmath103 ; @xmath104 is the cross edge ending at @xmath105 in @xmath106 and the non - cross edge @xmath107 jumps over @xmath104 for @xmath108 . here , @xmath109 is not drawn .\n( * a * ) @xmath110 and @xmath111 are both between @xmath103 and @xmath112 in @xmath113 .\n( * b * ) @xmath110 is between @xmath103 and @xmath112 in @xmath113 , but @xmath111 is below @xmath112 in @xmath113 .\n( * c * ) the node @xmath110 is below @xmath112 and @xmath114 is below @xmath115 .\nthis case is impossible to occur , as there is a directed cycle .\n[ fig2],scaledwidth=95.0% ]    for an internal node @xmath103 of degree 3 in @xmath50 , we use @xmath116 to denote the trivial path entering @xmath103 and @xmath117 to denote the two trivial paths leaving @xmath103 .\n[ stable_3 ] let @xmath103 be a degree-3 node in @xmath50 .\n\\(i ) if @xmath118 and @xmath119 , then @xmath120 .\n\\(ii ) if @xmath121 , then @xmath122 and @xmath123 .    for sake of simplicity\n, we let @xmath124 and use @xmath125 to denote the unique path from @xmath126 to @xmath127 for a node @xmath126 and a descendant @xmath127 of @xmath126 in @xmath128 .\n@xmath27 and @xmath128 have the same root and leaves . the common root of @xmath27 and @xmath128\nis written @xmath73 .\n\\(i ) assume that @xmath118 and @xmath119 .\nthen , there exists a cross edge @xmath129 entering @xmath130 and a non - cross edge @xmath131 jumping over @xmath129 for each @xmath132 .\nwe shall prove that @xmath120 by showing that no cross edge enters @xmath116 .\nassume @xmath110 is between @xmath103 and @xmath112 in @xmath113 .\nwhen @xmath111 is below @xmath110 in @xmath133 ( figure  [ fig2]a ) , there are two cases\n. if @xmath114 is in the path @xmath134 or below it , then , @xmath135 does not pass @xmath111 . if @xmath114 is not below @xmath103 , @xmath135 does not pass @xmath103 and so @xmath111\n. therefore , by lemma  [ lemma22 ] , there is path from @xmath73 to every leaf below @xmath112 that does not pass @xmath111 . for any leaf @xmath41 not below @xmath112 in @xmath128 , @xmath136 avoids @xmath111 .\nhence , @xmath111 is a reticulation node in @xmath27 , but not visible .\nthis is a contradiction .\nwhen @xmath111 is below @xmath112 in @xmath128 ( figure  [ fig2]b ) , @xmath111 is below @xmath112 as a reticulation node .\nsince @xmath137 does not pass @xmath112 , by lemma  [ lemma22 ] , there is a path from @xmath73 to a leaf below @xmath112 that does not pass @xmath112 . for any leaf @xmath41 not below @xmath112 in @xmath128\n, @xmath136 avoids @xmath112 .\nhence , @xmath112 is not visible , a contradiction .    we have proved that @xmath110 is not between @xmath103 and @xmath112 in the tree path @xmath113 . by symmetry\n, @xmath114 is not between @xmath103 and @xmath115 in @xmath134 .\nassume there is a cross edge enters @xmath116 .\nlet @xmath45 be the lowest reticulation node in @xmath116 .\nthen , @xmath110 and @xmath114 are both not in @xmath138 .\notherwise , either @xmath111 or @xmath139 is between @xmath45 and @xmath103 , contradicting that @xmath45 is the lowest reticulation node in @xmath116 .\ncombining this fact with that @xmath140 is not between @xmath103 and @xmath141 in @xmath128 for @xmath142 , we conclude that either @xmath140 is below @xmath141 or there is a path from @xmath73 to @xmath140 not passing @xmath45 for each @xmath142 . hence , by lemma  [ lemma22 ] , @xmath45 is not visible with respect to any leaf below @xmath45 . for any leaf @xmath41 not below @xmath45 in @xmath128 ,\nthe tree path @xmath136 avoids @xmath45 .\nhence , @xmath45 is not visible , a contradiction .\nwe have proved that @xmath120 .\n\\(ii ) if @xmath121 , then @xmath103 is an ancestor of any other degree-3 node in @xmath50 .\nsince @xmath27 is acyclic , there does not exist @xmath143 such that @xmath144 for some @xmath145 and @xmath146 .\nhence , @xmath147 .\nassume on the contrary the weights of @xmath134 and @xmath113 are both 2 .\nthen , @xmath140 is not between @xmath103 and @xmath141 for @xmath142 , proved above .\nif @xmath110 or @xmath114 is in @xmath78 , the lowest reticulation in @xmath78 is not visible , a contradiction .\notherwise , @xmath110 is below @xmath112 and @xmath114 is below @xmath115 , implying a cycle in @xmath27 ( figure  [ fig2]c ) .\nthis is a contradiction .\nhence , either @xmath134 or @xmath113 has weight less than 2 .\n@xmath148    let @xmath27 be a reticulation visible network with @xmath0 leaves .\nthen , @xmath149    let @xmath150 denote the set of @xmath151 internal nodes of degree 3 in @xmath50 . note that any trivial path other than @xmath78 starts with a node in @xmath150\ndefine : @xmath152 for @xmath153 .\nclearly , @xmath154 s are pairwise disjoint and hence @xmath155 when @xmath156 , @xmath157 . by proposition  [ stable_3 ] , @xmath158 .\nlet @xmath159 be the start node of @xmath160 for each @xmath156 .\nagain , by proposition  [ stable_3 ] , @xmath161 .\nit is clear that under the map @xmath162 , at most two nodes in @xmath163 are mapped to the same node in @xmath164 , and different nodes in @xmath163 are mapped to different nodes in @xmath165 .\nthus , @xmath166 .\nsince @xmath147 , the inequality implies that @xmath167\\\\ &    = & |v_1|+2|v_2|+3|v_3|+ ( 3|v_4|+|v_4| ) \\\\ &    \\leq & 2(|v_0|+|v_1| ) + 3(|v_2|+|v_3|+|v_4|)\\\\ & \\leq & 3(|v_0|+|v_1|+|v_2|+|v_3|+|v_4|)\\\\ & = & 3(n-1 ) , \\end{array}\\ ] ] where the first inequality is derived from the substitution of @xmath168 for @xmath169 .\ngalled networks form a subclass of reticulation visible networks ( huson et al .\n2011 ) . in this section\n, we shall show that there are at most @xmath1 reticulations in a galled network with @xmath0 leaves .\ngiven that the galled network shown in figure  [ fig3]a has exactly @xmath1 reticulations , @xmath1 is the tight bound on the number of reticulation nodes in a galled network with @xmath0 leaves .\n: there is a non - cross edge @xmath47 in @xmath49 such that @xmath8 and @xmath9 are in @xmath78 , and there is a cross - edge edge @xmath170 and a non - cross edge @xmath109 both ending at a node in a trivial path other than @xmath78 , where @xmath171 is not drawn . in ( * b * ) and\n( * c * ) , solid straight and curve arrows represent edges and paths in @xmath50 , respectively ; round dot arrows represent edges in @xmath49 , respectively [ fig3],scaledwidth=80.0% ]    [ gn_1 ] for a galled network @xmath27 with @xmath0 leaves , @xmath172    let @xmath27 be a galled network with @xmath0 leaves and let @xmath173 . since @xmath27 is reticulation visible , by theorem  [ stable_1 ] , there is a set of edges @xmath49 such that ( a ) @xmath49 contains exactly one incoming edge for each reticulation node and ( b ) @xmath50 is a subtree with the same leaves as @xmath27 .\nwe use the same notation as in section 3 .\n@xmath78 denotes the trivial path whose first edge is the open edge entering @xmath73 ; @xmath174 denote the other @xmath75 trivial paths in @xmath50 .\nwe prove the result by showing that @xmath49 does not contain any non - cross edges and only one cross - edge can end at a node in each @xmath90 for @xmath145 .\nif @xmath78 contains only the open edge entering @xmath73 , there is no edge in @xmath49 that enters @xmath78 .\nwe first prove that this fact is also true even if @xmath78 contains other edges below @xmath73 .\nsince @xmath27 is acyclic and there is a directed path from the end of @xmath78 to a node in @xmath90 for any @xmath145 , there is no cross edge @xmath81 such that @xmath8 is in @xmath90 and @xmath9 is in @xmath78 .    if there is a non - cross edge @xmath175 such that @xmath176 are in @xmath78 ( figure  [ fig3]b ) , we let @xmath89 be the other child of @xmath8 in @xmath78 . then , @xmath89 must be a tree node such that @xmath88 , where @xmath177 is a reticulation node in some trivial path @xmath90 , @xmath145 .\n( if @xmath89 is a reticulation , it is not visible , a contradiction . )\nsince @xmath27 is galled and @xmath177 is a reticulation node , there exist two paths @xmath178 and @xmath179 from a common tree node to @xmath177 in @xmath27 such that ( i ) they are internally disjoint and ( 2 ) @xmath177 is the only reticulation node in them .\nnote that no edges in @xmath49 other than @xmath93 can appear in @xmath178 and @xmath179 . otherwise , either @xmath178 and @xmath179 contains another reticulation node .\nthus , @xmath180 is a subtree of @xmath50 .\nthis implies that one of @xmath178 and @xmath179 is the single edge @xmath93 and the other is @xmath181 , the unique path from @xmath89 to @xmath177 in the tree @xmath50 .\nthis is impossible , as the reticulation node @xmath9 is in @xmath181 .\nwe have shown that there is no edge in @xmath49 that enters @xmath78 .\nnext , we show that there is at most one edge in @xmath49 that enters @xmath90 for each @xmath182 .\nassume that @xmath183 and @xmath184 are two edges in @xmath49 such that @xmath139 is below @xmath111 in some @xmath90 ( @xmath145 ) ( figure  [ fig3]c ) .\nthen , @xmath185 must be a non - cross edge and @xmath186 is also below @xmath111 .\n( otherwise , @xmath111 is not visible . ) again , by fact ( 2 ) in proposition  [ 31 ] , there is a cross edge @xmath187 such that @xmath89 is between @xmath186 and @xmath139 in @xmath90 and @xmath177 is in @xmath188 , @xmath189 . since @xmath177 is a reticulation node and @xmath27\nis galled , there are two internally disjoint paths @xmath178 and @xmath179 from a common tree node to @xmath177 in which any nodes other than @xmath177 are a tree node . if @xmath190 contains an edge in @xmath49 other than @xmath93 , the head of the edge is a reticulation node and appears in either @xmath178 or @xmath179 , a contradiction .\nhence , @xmath191 is a subtree of @xmath128 . without loss of generality\n, we may assume @xmath178 contains @xmath93 .\nthat is , @xmath93 is the last edge of @xmath178 .\nnote that @xmath192 are all nodes in @xmath90 , ordered from top to bottom .\nif @xmath178 contains more than one edge in @xmath128 , it must pass through @xmath111 , a contradiction .\nif @xmath178 is equal to @xmath93 , then @xmath179 must pass through @xmath139 , a contradiction .\ntherefore , there is at most one edge in @xmath49 whose head is in each trivial path @xmath90 , @xmath145 .\nin summary , there are @xmath75 trivial paths other than @xmath78 and there is at most one edge in @xmath49 entering each of them .\nhence , @xmath193\nin this section we will give a tight bound for the number of reticulations in a nearly - stable network .\nthe class of nearly - stable networks is different from the class of reticulation visible networks , but surprisingly the tight upper bound is also @xmath2 . the network shown in figure\n[ fig4]a is an example for a nearly - stable network with @xmath2 reticulations .\nwe need the following fact , proved by gambette et al .\n( 2015 ) .\n[ ns_1 ] let @xmath27 be a nearly - stable network with @xmath0 leaves .\nthere exists a set @xmath49 of edges such that ( a ) @xmath50 is a reticulation visible subnetwork over the same leaves as @xmath27 , and ( b ) @xmath49 contains exactly one incoming edge for each reticulation node that is not visible in @xmath27 .     with four leaves .\nit has nine reticulations ( shaded circles ) , five of which are not visible .\nthe round dot edges are those removed to obtain the reticulation visible network @xmath42 in ( * b * ) .\nthe dashed paths in @xmath42 are the cross and non - cross paths removed to obtain a subtree with the same leaves as @xmath27 .\n( * c * ) and ( * d * ) are two cases considered in the proof of the part ( c ) in lemma  [ ns_2 ] : a non - cross path from @xmath8 and @xmath9 contains a tree node @xmath194 of @xmath27 , and it contains a reticulation node @xmath194 of @xmath27 [ fig4],scaledwidth=90.0% ]    let @xmath49 be the set of edges satisfying the two properties in proposition  [ ns_1 ] and let @xmath195 ( figure  [ fig4]a ) .\nthe edges in @xmath49 are said to be _ ns - edges_. we remark that @xmath42 is a subdivision of a binary reticulation visible network .\nthat is , the reticulation visible network can be obtained from @xmath42 by replacing some paths whose internal nodes are of degree 2 with directed edges with the same orientation .\nhence , @xmath42 contains degree-2 nodes if @xmath49 is not empty .    for a path @xmath36\n, we use @xmath196 to denote the set of its internal nodes .\nsince @xmath42 is a subdivision of a binary reticulation visible network with the same leaves as @xmath27 , by theorem  [ stable_1 ] , there is a set @xmath197 of paths in @xmath198 such that ( i ) each path @xmath199 is from a degree-3 tree node to a visible reticulation node in @xmath42 and its internal nodes are all of degree-2 in @xmath42 , and ( ii ) @xmath200 is a subtree with the same leaves as @xmath27 .\nlet @xmath201 .\n@xmath128 is obtained from the removal of the internal nodes and edges of the paths in @xmath202 .\nwe can classify the paths in @xmath197 as _ cross paths _ and _ non - cross paths _ accordingly as in section 3 ( figure  [ fig4]b ) .\n[ ns_2 ] let @xmath27 be a nearly - stable network and let @xmath49 , @xmath42 , @xmath128 and @xmath197 be defined above .\n\\(a ) every internal node in a path in @xmath197 is not visible in @xmath27 .\n\\(b ) each cross path in @xmath197 consists of either a single edge or two edges in @xmath27 .\n\\(c ) each non - cross path in @xmath197 is simply an edge in @xmath27 .\n\\(d ) if @xmath36 is a cross path in @xmath197 from @xmath89 to @xmath177 and @xmath178 is a non - cross path in @xmath197 from @xmath8 to @xmath9 such that @xmath89 is between @xmath8 and @xmath9 ( figure  [ fig4]b ) , then @xmath36 and @xmath178 are both a single edge in @xmath27 .\n\\(e ) every two distinct paths in @xmath197 are node disjoint .\nwe remark that @xmath203 denotes the unique path from @xmath177 to @xmath204 for any two nodes @xmath177 and @xmath204 in @xmath128 .\n\\(a ) let @xmath36 be a path in @xmath197 and let @xmath204 be an internal node of it . for any leaf @xmath205 , the unique path @xmath136 does not pass @xmath204 in @xmath128 . hence , @xmath204 is not visible in @xmath27 .\n\\(b ) if there are two or more internal nodes in a path in @xmath197 , by ( a ) , they are consecutive and not visible in @xmath27 , contradicting that @xmath27 is nearly - stable .\n\\(c ) we use @xmath73 to denote the root of @xmath27 , which is also the root of @xmath42 and @xmath128 .\nlet @xmath36 be a non - cross path between @xmath8 and @xmath9 , where @xmath8 and @xmath9 are in some path @xmath90 in @xmath128 .\nnote that @xmath206 is a sub - path of @xmath90 and is internally disjoint from @xmath36 .\nby fact ( 2 ) in proposition  [ 31 ] , there is an internal node @xmath89 in @xmath206 that is the start node of a cross path @xmath207 in @xmath197 .\nfirst , any node @xmath204 between @xmath8 and @xmath9 in @xmath206 is not visible .\nthis is because for any network leaf @xmath41 not below @xmath9 in @xmath128 , @xmath208 does not pass through @xmath204 , and for any network leaf @xmath41 below @xmath9 in @xmath128 , @xmath209 is a path not passing through @xmath204 .\ntherefore , @xmath89 must be the unique internal node of @xmath206 .\nthat is , @xmath89 is the child of @xmath8 and the parent of @xmath9 in @xmath206 .\nassume that @xmath36 is not an edge in @xmath27 .\nby ( a ) , there is a unique degree-2 node @xmath194 between @xmath8 and @xmath9 in @xmath36 .\nwe consider the following two cases .    if @xmath210 ( figure  [ fig4]c ) , then the other outgoing edge @xmath211 had been removed to obtain @xmath42 .\nthat is , @xmath212 . by the definition of @xmath49\n, @xmath126 is a reticulation node and not visible in @xmath27 .\nthat @xmath194 and @xmath126 are both not visible contradicts that @xmath27 is nearly - stable .\nif @xmath213 ( figure  [ fig4]d ) , then the other incoming edge @xmath214 had been removed to obtain @xmath42 .\nnote that @xmath215 and @xmath216 , as @xmath89 has degree 3 in @xmath42 .\nin addition , @xmath127 is not an internal node of a path in @xmath197 .\n( otherwise , by ( a ) , @xmath194 and @xmath127 are both not visible ) .\nso @xmath127 is a node in @xmath128 .\nclearly @xmath127 is not below @xmath9 and hence not below @xmath89 in @xmath128 .\n( otherwise @xmath27 has a cycle . )\nhence , @xmath217 does not pass through @xmath8 .\nconsider a network leaf @xmath57 .\nif it is not below @xmath9 , then @xmath208 does not pass through @xmath8 .\nif @xmath41 is below @xmath9 , then @xmath218 is a path not passing through @xmath8 in @xmath27 .\ntherefore , @xmath8 is not visible .\nthat @xmath8 and @xmath89 are both not visible in @xmath27 contradicts that @xmath27 is nearly - stable .\n\\(d ) by the proof of ( c ) , @xmath178 is a single edge in @xmath27 and @xmath89 is the only node in @xmath36 and not visible . thus @xmath36 must be an edge in @xmath27 .\n( otherwise by ( a ) @xmath89 and its child in @xmath36 are not visible , contradicting that @xmath27 is nearly - stable . )\n\\(e ) it can be easily derived from the definition of the cross path .\nlet @xmath219 be a cross path from @xmath89 to @xmath177 .\nthen , @xmath177 is a visible reticulation node in @xmath27 .\nit may have as many as two reticulation parents that are not visible .\nlet @xmath220 , where @xmath221 is the set of all parents of @xmath177 and @xmath222 is the set of all reticulation nodes that are not visible in @xmath27 .\n@xmath223 or @xmath224 .\ndefine the cost of @xmath225 as : @xmath226 where @xmath224 is used to count @xmath177 and the other child of @xmath89 which is a visible reticulation node if there is a non - cross edge jumping over @xmath89 .    as in section\n[ sec : stable ] , we let @xmath78 denote the trivial path whose first edge is the incoming edge to @xmath73 and let @xmath227 denote the other @xmath75 trivial paths in @xmath128 .\nwe charge the cost of a cross path to the trivial path @xmath90 in @xmath128 in which the cross path enters and call it the weight of @xmath90 .\nthe weight of @xmath90 is denoted by @xmath100 .\nif a trivial path does not contain any end node of the cross paths in @xmath197 , its weight is set to be 0 .\neach visible reticulation node contributes to at least one unit of weight . by the definition of nearly - stable networks ,\nany reticulation node that is not visible must have a visible reticulation node as its child , and by the proof of lemma  [ ns_2 ] ( c ) , any reticulation node that is not visible in @xmath27 must be in some @xmath228 , @xmath177 being the end node of a cross path , so it also contributes to at least one unit weight . therefore , @xmath229 . to bound this , we first establish a useful lemma .\nas in section  [ sec : stable ] , we use @xmath116 to denote the trivial path entering @xmath103 and @xmath134 , @xmath113 to denote the trivial paths leaving @xmath103 for a node @xmath103 of degree 3 in @xmath128 .    .\nsolid arrows and curves represent the edges and paths in @xmath128 , while square dot arrows and curves represent the removed edges and paths .\n@xmath230 is the reticulation child of @xmath103 in a trivial path @xmath134 leaving @xmath103 .\n@xmath231 is the child of @xmath103 in the trivial path @xmath113 .\nthe path from @xmath114 to @xmath112 is a cross path entering @xmath112 .\n( * a * ) a cross path from @xmath110 to @xmath115 and @xmath232 is a node between @xmath103 and @xmath115 , where @xmath115 is in @xmath134 .\n( * b * ) the unique tree node @xmath231 between @xmath103 and @xmath112 is also a parent of @xmath230 in @xmath27 [ fig5],scaledwidth=50.0% ]    [ ns_33 ] let @xmath130 be a trivial path defined above and let @xmath233 be a cross path from @xmath140 to @xmath234 , where @xmath234 is in @xmath130 and @xmath235 . define @xmath236 .\n\\(a ) the tree path @xmath237 consists of either a single edge or two edges in @xmath130 .\nif @xmath237 includes two edges , the internal node is not visible .\n\\(b ) if there exists a node @xmath238 between @xmath103 and @xmath234 in @xmath130 and @xmath238 is a reticulation node in @xmath27 , then no cross - path enters the other trivial path @xmath239 .\n\\(c ) assume that @xmath233 contains an internal node that is a reticulation node in @xmath27 . if there is a cross - path @xmath240 from @xmath241 to @xmath242 such that @xmath242 is in @xmath239 , then @xmath140 is not in @xmath243 .\nnote that @xmath244 for @xmath142 . without loss of generality\n, we may assume that @xmath245 and @xmath246 , that is @xmath247 and @xmath248 .\n\\(a ) let @xmath232 be a node between @xmath103 and @xmath115 in @xmath134 ( figure  [ fig5]a ) and let @xmath41 be a leaf in @xmath27 . if @xmath41 is not below @xmath115 in @xmath128 , the path @xmath249 does not pass through @xmath232 .\nlet @xmath41 be a leaf below @xmath115 in @xmath128 .\nsince @xmath110 is not in @xmath134 in @xmath128 , the tree path @xmath250 does not pass @xmath232 . by lemma\n[ lemma22 ] there is a path from @xmath73 to @xmath41 that avoids @xmath232 .\ntherefore , @xmath232 is not visible .    since @xmath27 is nearly - stable , there is at most one node in @xmath251 , as each internal node is not visible .\n\\(b ) suppose on the contrary , there is a cross path @xmath252 from @xmath114 to @xmath112 entering @xmath113 , where @xmath112 is in @xmath113 . by ( a ) , @xmath112 is a child of @xmath103 or there is a unique node @xmath231 between @xmath103 and @xmath112 in @xmath113 .\nwe first show that @xmath103 is not visible in @xmath27 .\nif @xmath112 is a child of @xmath103 or there is a node @xmath231 in @xmath133 such that @xmath231 is a reticulation node in @xmath27 , @xmath103 has two reticulation children in @xmath27 . by lemma  [ lemma22 ] ,\n@xmath103 is not visible .\nif @xmath113 contains a node @xmath231 between @xmath103 and @xmath112 in @xmath27 , @xmath253 must not be an edge in @xmath27 .\notherwise , as shown in figure  [ fig5]b , @xmath230 and @xmath231 are then not visible , contradicting that @xmath27 is nearly - stable .\nlet @xmath254 be the edge removed from @xmath230 in the process of transforming @xmath27 to @xmath42 .\nsince @xmath255 , either @xmath256 is below @xmath112 or there is a path from @xmath73 to @xmath256 that avoids @xmath103 .    since @xmath114 is in another trivial path and\nthere is no node between @xmath103 and @xmath230 in @xmath134 , @xmath89 is either below @xmath230 or the path @xmath135 does not pass @xmath103 .    since the reticulation nodes @xmath257 are below @xmath103 and satisfy the condition in lemma  [ lemma22 ] ,\nthere is a path from @xmath73 to @xmath41 that avoids @xmath103 for any leaf @xmath41 below @xmath230 or @xmath112 . for any leaf @xmath41 below neither @xmath230 nor @xmath112 ,\nit is not below @xmath103 and the path @xmath136 does not pass through @xmath103 .\ntherefore , @xmath103 is also not visible .    the fact that @xmath103 and @xmath230 are both not visible contradicts that @xmath27 is nearly - stable .\nthis implies that there is no cross path entering @xmath113 .\n\\(c ) if @xmath112 is the child of @xmath103 in @xmath113 , the case is trivial .\nassume that there is an internal node @xmath231 between @xmath103 and @xmath112 in @xmath113 .\nby the fact ( a ) , @xmath231 is not visible .\nif @xmath258 , then @xmath110 and its child in @xmath259 are both not visible , contradicting @xmath27 is nearly - stable network .    , while square dot arrows and curves represent the removed edges and paths .\nthe path from @xmath110 to @xmath115 is the cross path ending at a node in a trivial path leaving @xmath103 [ fig6],scaledwidth=90.0% ]    [ ns_4 ] for an internal node @xmath103 of degree @xmath260 in @xmath128 ,    \\(a ) @xmath261 and @xmath262 .\n\\(b ) if @xmath263 , then @xmath264 , where @xmath265 .\n\\(c ) if @xmath266 and @xmath119 , then @xmath120 . moreover , assume @xmath267 is the degree-3 ancestor of @xmath103 such that @xmath268\n. then @xmath269 .\n\\(d ) if @xmath270 , then @xmath271 and @xmath123 .\n\\(a ) we only prove that @xmath261 . if there is no non - cross edge jumping over the start node of the cross path entering @xmath134 , by eqn .\n( [ weight_def ] ) , the weight of @xmath134 is at most 3 .    if there is a non - cross edge jumping over the start node @xmath110 of the cross - path @xmath272 ending at a node @xmath115 in @xmath134 , by the fact ( d ) of lemma  [ ns_2 ] , @xmath272 is equal to the single edge @xmath273\n. therefore , @xmath115 has at most one reticulation parent , which is in @xmath134 if exists . by eqn .\n( [ weight_def ] ) , @xmath261 .\n\\(b ) assume @xmath274 .\nthen , there is a cross path @xmath272 from @xmath110 to @xmath115 where @xmath115 is in @xmath134 . if there is no non - cross edge jumping over @xmath110 , by eqn .\n( [ weight_def ] ) , @xmath115 has two reticulation parents ( figure  [ fig6]a ) .    if there is a non - cross edge jumping over @xmath110 , by the fact ( d ) of lemma  [ ns_2 ] , @xmath272 is equal to a single edge @xmath273 , and by eqn .\n( [ weight_def ] ) , @xmath115 has one reticulation parent @xmath230 in @xmath134 ( figure  [ fig6]b ) . by the fact ( b ) of lemma  [ ns_33 ] , there is no cross path that enters @xmath113 , implying @xmath275 .\n\\(c ) assume @xmath266 and @xmath119 .\nlet @xmath233 be the cross path from @xmath140 to @xmath234 , with @xmath234 in @xmath276 .\nsince @xmath119 , by the fact ( b ) of lemma  [ ns_33 ] , there is no reticulation node between @xmath103 and @xmath234 for each @xmath277 .\nhence , for each @xmath277 , either the parent of @xmath234 in @xmath233 is a reticulation node and not visible ( figure  [ fig6]c ) , or there is a non - cross edge @xmath278 jumping over @xmath279 ( figure  [ fig6]e ) .    by the facts ( a ) and ( b ) of lemma  [ ns_33 ] ,\neither @xmath234 is the child of @xmath103 in @xmath130 or there is a tree node @xmath238 between @xmath103 and @xmath234 in @xmath130 for @xmath265 .\nassume that there is a tree node @xmath238 between @xmath103 and @xmath234 in @xmath130 , @xmath265 .\nlet @xmath236 .\nif @xmath240 has an internal node that is a reticulation , by the fact ( c ) of lemma  [ ns_33 ] , @xmath280 .    if there is a non - cross edge jumping over @xmath241 , by the fact ( d ) of lemma  [ ns_2 ] , that @xmath281 implies that the endpoints of the non - cross edge are also between @xmath103 and @xmath234\nthis is impossible , as there is only @xmath238 between @xmath103 and @xmath234 .\ntherefore , @xmath280 .\nsimilarly , @xmath282 .    we have proved that for @xmath283 , @xmath140 is not between @xmath103 and @xmath242 .\nthus , @xmath140 is either below @xmath242 or there is a path from @xmath73 to @xmath140 that does not pass @xmath103 .\ntherefore , by lemma  [ lemma22 ] , there is a path from @xmath73 to @xmath41 not passing through @xmath103 for any leaf below either @xmath115 or @xmath112 . for any leaf @xmath41 below neither @xmath115 nor @xmath112 ,\nsince it is not below @xmath103 in @xmath128 , @xmath136 does not contain @xmath103 .\ntherefore , @xmath103 is not visible .\nthis also implies that @xmath115 and @xmath112 are children of @xmath103 .\nassume @xmath267 is the start node of @xmath116 and @xmath268 .\nwe further prove that @xmath116 consists of only an edge @xmath284 in @xmath27 .\nassume on the contrary there are nodes between @xmath267 and @xmath103 in @xmath285 .\nwe consider the parent @xmath204 ( @xmath286 ) of @xmath103 in the trivial path @xmath285 . if @xmath204 is a reticulation node , that @xmath103 is not visible implies that @xmath204 is also not visible , a contradiction .\nhence @xmath204 must be a tree node in @xmath27 .\nwe consider the following two cases .    *\ncase 1*. @xmath204 is equal to @xmath140 or equal to the other parent of the internal node of @xmath233 for some @xmath287 .    without loss of generality\n, we may assume @xmath247 ( figure  [ fig7]a and b ) .\nthis implies that there is no non - cross edge jumping over the cross path @xmath272 and there is a reticulation node @xmath288 in @xmath272 .\nwhen @xmath289 , let @xmath290 be the edge removed from @xmath288 in the first stage .\nsince @xmath291 is a parent of @xmath288 , if @xmath291 is below @xmath204 , it must be below @xmath112 . when @xmath292 , @xmath110 is below @xmath112 if it is below @xmath204 .\nsimilarly , @xmath114 is below @xmath115 and thus below @xmath288 if it is below @xmath204 .\nthe set of reticulation nodes @xmath293 and @xmath204 and satisfy the condition in lemma  [ lemma22 ] , so there is path from @xmath73 to @xmath41 that avoids @xmath204 for any leaf @xmath41 below @xmath288 and @xmath112 .\nif @xmath41 is below neither @xmath288 nor @xmath112 , it is not below @xmath204 , and @xmath136 does not pass through @xmath204 .\nhence , @xmath204 is not visible .    *\ncase 2*. @xmath204 is neither @xmath140 nor the other parent of the internal node of @xmath233 for each @xmath283 ( figure  [ fig7]c ) .    in this case , for each @xmath283 , @xmath234 is either below @xmath242 or there is a path from @xmath73 to @xmath140 that avoids @xmath204 . applying lemma  [ lemma22 ] on the set of reticulations @xmath294 and @xmath204 , we conclude that there is a path from @xmath73 to @xmath41 that avoids @xmath204 for any leaf @xmath41 below @xmath115 or @xmath112 .\nclearly , for any leaf @xmath41 not below @xmath115 or @xmath112 , @xmath208 avoids @xmath204 .\ntherefore , @xmath204 must be not visible .\nthat @xmath204 and @xmath103 are two consecutive nodes and not visible contradicts that @xmath27 is nearly - stable .    after proving that the path @xmath285 is actually an edge @xmath284\n, we now prove that @xmath269 .\nassume on the contrary @xmath295 .\nthen , the child @xmath296 of @xmath267 in @xmath297 must be a reticulation node ( figure  [ fig7]d ) .\nthen , the set of reticulations @xmath298 and @xmath267 satisfy the conditions in lemma  [ lemma22 ] , so there exists a path from @xmath73 to @xmath41 that does not pass through @xmath267 for any leaf @xmath41 below @xmath267 in @xmath128 .\nfor any leaf @xmath41 not below @xmath267 , the tree path @xmath136 does not pass through @xmath267 . hence , @xmath267 is not visible .\nthat @xmath267 and @xmath103 are not visible contradicts that @xmath27 is nearly - stable network .\n\\(d ) if @xmath270 , then @xmath103 is an ancestor of any degree-3 node in @xmath128 .\nsince @xmath27 is acyclic , there does not exist any cross path @xmath299 from @xmath89 to @xmath177 , such that @xmath300 while @xmath301 for @xmath145 .\nhence @xmath147 .\nif the weight of @xmath134 and @xmath113 are both 2 , and if @xmath279 is the start node of the cross path @xmath302 that enters @xmath106 for @xmath303 , either @xmath110 or @xmath114 is a node in @xmath78 . following the proof of fact ( c ) ,\nwe conclude that @xmath103 and its parent in @xmath78 are both not visible , a contradiction .    .\nthe path from @xmath279 to @xmath304 is a cross path ending at @xmath304 in a trivial path @xmath106 leaving @xmath103 for @xmath108 .\n( * a * ) @xmath110 is an internal node in @xmath116 .\n( * b * ) @xmath204 is the other parent of the unique internal node of the cross path from @xmath110 to @xmath115 .\n( * c * ) neither @xmath110 nor @xmath114 is equal to @xmath204 and has a common child with @xmath204 .\n( * d * ) @xmath267 is the parent of @xmath103 and has a reticulation node @xmath296 as the other child .\nsolid arrows and curves represent the edges and paths in @xmath128 , round dot arrows represent edges in @xmath49 that were removed to form @xmath42 , and square dot arrows and curves represent the edges and paths that were removed to transform @xmath42 to @xmath128 .\n[ fig7],scaledwidth=90.0% ]    let @xmath27 be a nearly - stable network with @xmath0 leaves .\nthen , @xmath305    let @xmath150 denote the set of internal nodes of degree 3 in @xmath128 , and let @xmath306 for any @xmath307 , we define @xmath159 to be the start node of the trivial path @xmath160 that enters @xmath9 . by proposition  [ ns_4 ] ( c ) and ( d ) , that @xmath308 implies @xmath309 . additionally , there are at most two different nodes @xmath310 and @xmath311 in @xmath163 such that @xmath312 , as there are only two trivial paths leaving a degree-3 tree node in @xmath128 ; for different @xmath310 and @xmath311 , if @xmath313 and @xmath314 are in @xmath315 , then @xmath316 . taken together ,\nthe two facts imply that @xmath317 .    since @xmath147 , @xmath318\\\\          & = &      |v_1|+2|v_2|+3|v_3|+4|v_4| \\\\          & \\leq &   2|v_0|+2|v_1|+3|v_2|+3|v_3|+3|v_4|\\\\          & \\leq &    3(|v_0|+|v_1|+|v_2|+|v_3|+|v_4|)\\\\          & = &       3(n-1 ) .\n\\end{array}\\ ] ]\nthe stable - child network shown in figure  [ fig8]a has as many as @xmath3 reticulation nodes . in this section\n, we shall prove that a stable - child network can have @xmath3 reticulation nodes at most .\nwe first transform a stable - child network to a reticulation visible network and then to a binary tree with the same leaves by removing some edges into reticulations nodes .\nif it is not visible : ( * b * ) @xmath45 and its child @xmath319 have a common parent .\n( * c * ) @xmath45 has a parent @xmath320 and a sibling @xmath55 under @xmath320 such that @xmath55 and @xmath320 has a common parent @xmath89 .\n( * d * ) neither ( * b * ) nor ( * c * ) is true .\n( * e * ) both ( * b * ) and ( * c * ) occur at the same time [ fig8],scaledwidth=60.0% ]    [ sc_1 ] let @xmath27 be a stable - child network . there is a set of edges @xmath49 such that ( 1 ) @xmath50 is a subdivision of a reticulation visible network over the same leaves as @xmath27 , and ( 2 ) @xmath49 contains exactly an incoming edge for a reticulation node if it is not visible in @xmath27 .    for a reticulation node @xmath45 that is not visible in @xmath27 ,\nits unique child must be a visible reticulation node .\nfurthermore , since each node has a visible child , its parents both have a visible child other than @xmath45 and are both a tree node . to transform @xmath27 into a reticulation visible network\n, we will delete one or two edges around a reticulation if it is not visible .\nfor each reticulation node @xmath45 that is not visible , we consider the following three cases .\nif @xmath45 and its unique child @xmath319 have a common parent @xmath320 ( figure  [ fig8]b ) , then @xmath321 is removed .    if @xmath45 and its child @xmath319 do not have a common parent , but @xmath45 has a reticulation sibling @xmath55 such that the parent @xmath89 of the common parent @xmath320 of @xmath45 and @xmath55 is the other parent of @xmath55 ( figure  [ fig8]c ) , @xmath322 and @xmath323\nare then deleted at the same time .    when neither occurs ( figure  [ fig8]d )\n, we arbitrarily select an incoming edge of @xmath45 to remove .\nthe edges removed in the above process is called _ sc - edges_. each sc - edge is from a tree node to a reticulation node .\na sc - edge is _ concealed _ if the head is a visible reticulation node ; it is _ revealed _ otherwise . note that a concealed sc - edge is deleted only when the case shown in figure  [ fig8]c is satisfied . therefore , a concealed sc - edge jumps over the associated revealed sc - edge that is removed at the same time .\nit is not hard to see that the sc - edges that are removed when different reticulation nodes are considered are different .\nlet @xmath49 be the set of sc - edges .\nfirst , we only deleted an incoming edge for each reticulation node and did not delete the incoming edge for each tree node , so the resulting network @xmath50 is connected .\nsecond , @xmath50 has the same leaves as @xmath27 .\nthe reasons for this include that ( i ) we do not remove any outgoing edge of a reticulation node , and ( ii ) for any tree node @xmath103 , if an outgoing edge of it is removed , the other outgoing edge enters another tree node and thus has never not been removed .\nnow , we show that @xmath50 is a subdivision of a binary reticulation visible network .\nsince we had deleted an incoming edge for a reticulation node if it is not visible , all the remaining reticulation nodes are visible .\n@xmath50 is reticulation visible .\nwe can also show that there are no two internally disjoint paths from a common tree node to a common reticulation node in which each internal node is of degree 2 , implying that @xmath50 is a subdivision of a binary reticulation visible network .\nassume on the contrary there are two internally disjoint path @xmath259 and @xmath324 between @xmath8 and @xmath9 such that their internal nodes are all of degree 2 .\nif neither @xmath259 nor @xmath324 is a single edge , then the two children of @xmath8 in @xmath259 and @xmath324 are both not visible , contradicting that @xmath27 is a stable - child network .\ntherefore , either @xmath259 or @xmath324 is a single edge from @xmath8 and @xmath9 .    without loss of generality\n, we may assume that @xmath324 is equal to the edge @xmath175 . according to the three rules which we used to remove the edges in @xmath49 ,\nif an incoming edge of a node is removed , its child in @xmath50 is visible in @xmath27 .\nthis implies that @xmath50 does not contain a path consisting of two or more degree-2 nodes that are not visible in @xmath27 .\ntherefore , @xmath259 has exactly one internal node @xmath177 .\nif @xmath177 is a tree node in @xmath27 , then , we removed an outgoing edge of @xmath177 according to either the second or third case . in the former case , we remove @xmath325 at the same time . in the later case\n, @xmath47 does not exist in @xmath27 .\nthis is impossible .\nwhen @xmath177 is a reticulation node , we removed an incoming edge of it .\nagain , the edge @xmath47 does not exist in @xmath27 in each possible case , a contradiction .\nwe have proved that @xmath50 is a subdivision of a binary network .\nlet @xmath326 be the subnetwork obtained after the removal of the edges in @xmath49 .\n@xmath42 is a subdivision of a reticulation visible network . by theorem  [ stable_1 ] ,\nthere exist a set of paths @xmath197 such that ( i ) @xmath327 is a subtree of @xmath27 with the same leaves and ( ii ) all the internal nodes in each path in @xmath197 are of degree 2 .\nagain , we use @xmath328 to denote the trivial paths in @xmath128 , where @xmath78 denotes the trivial path starting with @xmath28 . as in the last section , a path in @xmath197 is called a non - cross path if its start and end nodes are both in @xmath188 for some @xmath277 ; it is called a cross path otherwise .\n[ sc_2 ] let @xmath36 be a path in @xmath197 .\n\\(a ) every internal node in @xmath36 is not visible in @xmath27 .\n\\(b ) if @xmath36 is a non - cross path , it is simply an edge .\n\\(c ) if @xmath36 is a cross path and ends at a node @xmath177 in the trivial path @xmath188 , every node between the start node of @xmath188 and @xmath177 in @xmath128 is not visible in @xmath27 .\n\\(d ) if @xmath36 is a cross path and there is a non - cross path @xmath178 jumping over it , then either @xmath36 is an edge or the start node of @xmath36 is the parent of the end node of @xmath178 in @xmath128 .\n\\(a ) and ( b ) are essentially the restatement of the fact ( a ) and ( c ) in lemma  [ ns_2 ] .\n\\(c ) let @xmath204 be a node between the start node of @xmath188 and @xmath177 in @xmath128 .\nfor any leaf @xmath41 that is not below @xmath177 in @xmath128 , @xmath249 is a path that does not pass @xmath177 and hence @xmath204 . for any leaf @xmath41 below @xmath177 in @xmath128 ,\nthe path @xmath329 avoids @xmath204 , as @xmath89 is the start node of @xmath36 in a trivial path different from @xmath188 .\nhence , @xmath204 is not visible in @xmath27 .\n\\(d ) by ( b ) , @xmath178 is simply an edge @xmath47 in @xmath42 .\nlet @xmath36 start at a node @xmath89 .\nif neither @xmath330 nor @xmath36 is a single edge , the two children of @xmath89 in @xmath36 and @xmath331 are both not visible , contradicting that @xmath27 is stable - child .\nlet @xmath45 be a reticulation node and not visible in @xmath27 .\nthen , a revealed sc - edge @xmath332 was removed from @xmath45 to obtain @xmath42 from @xmath27 .\nwe define the cost @xmath333 of @xmath45 to be : @xmath334    recall that @xmath335 .\nwe can define the cost of a cross path @xmath219 from @xmath89 to @xmath177 as follows : @xmath336 we further charge the cost of @xmath225 to the trivial path @xmath90 to which @xmath177 belongs and call it the weight of @xmath90 , written @xmath100 .\nif there is no cross path entering @xmath90 , the weight of @xmath90 is set to be 0 .    as for nearly - stable networks\n, we have that @xmath337    for an internal node @xmath103 with degree-3 in @xmath128 , we still use @xmath134 and @xmath338 to denote the trivial paths leaving @xmath103 and @xmath116 to denote the trivial path entering @xmath103 .    [ sc_3 ] for each internal node @xmath103 of degree 3 in @xmath128 ,    \\(a ) @xmath339 , @xmath142 .\n\\(b ) @xmath340 .\n\\(c ) if @xmath266 and @xmath341 , then @xmath271 . moreover , assume @xmath267 is the start node of @xmath116 and @xmath268\n. then @xmath342 .\n\\(d ) if @xmath270 , then @xmath271 and @xmath343 .\n\\(a ) we will only prove that @xmath344 .\nlet @xmath272 denote the cross path sending at a node @xmath115 in @xmath134 .\nlet @xmath110 be the start node of @xmath272 in a trivial path different from @xmath134 .\nnote that @xmath345 .    if there is no non - cross edge jumping over @xmath110 , then there are at most 2 elements in @xmath346 , and each element can have two unit cost at most .\nthus , by eqn .\n( [ scformula ] ) , @xmath347 .\nif there is a non - cross edge @xmath183 jumping over @xmath110 .\nby the fact ( b ) in lemma  [ sc_2 ] , @xmath348 is empty or a singleton .\nmoreover , by the fact ( d ) in lemma  [ sc_2 ] ( d ) , either @xmath272 is an edge , or @xmath349 is an edge in @xmath128 . if @xmath272 is an edge , then @xmath350 . if @xmath349 is an edge , @xmath351 . both implies that @xmath352 .\ntherefore , by eqn .\n( [ scformula ] ) , @xmath353 .\nwe remark that , if the parent of @xmath115 in @xmath128 is not a reticulation node in @xmath27 , then @xmath354 , and therefore @xmath355 .\nequality holds only if there is a non - cross edge jumping over @xmath177 .\n\\(b ) if @xmath356 and @xmath357 , we assume that the cross path @xmath302 ending at a node @xmath115 in @xmath106 starts at @xmath279 for @xmath108 . by\nthe fact ( c ) of lemma  [ sc_2 ] , every internal node in @xmath358 and @xmath359 is not visible .\nif there is a node between @xmath103 and @xmath304 for each @xmath360 , then the two children of @xmath103 are not visible in @xmath27 , contradicting that @xmath27 is stable - child .\nso @xmath103 is the parent of either @xmath115 or @xmath112 . without loss of generality\n, we may assume that @xmath103 is the parent of @xmath115 in @xmath128 .\nby the remark in the end of the proof of ( a ) , @xmath355 and hence @xmath361 .\n\\(c ) assume that @xmath266 and @xmath267 be the start node of @xmath116 such that @xmath268 .\nif @xmath341 , by ( a ) , the weights of @xmath134 and @xmath113 are both not zero . hence , there is a cross path @xmath302 ending at a node @xmath304 in @xmath106 and starting at a node @xmath279 in a trivial path different from @xmath106 for each @xmath362 .\nwe first show that @xmath279 either ( i ) below @xmath363 , or ( ii ) neither in @xmath116 nor below @xmath103 for @xmath364 and @xmath224 . without loss of generality , we assume @xmath364 .\n* case 1*. @xmath110 is in @xmath359 ( figure  [ fig9]a ) .\nif there is a non - cross edge @xmath183 jumping over @xmath110 , @xmath111 is either in @xmath365 or @xmath111 is below @xmath112 in @xmath113 .\nthe former implies that @xmath111 is not visible , whereas the latter implies that @xmath112 is not visible .\nthis contradicts that both @xmath111 and @xmath112 are visible in @xmath42 .\nsince @xmath110 is an internal node between @xmath103 and @xmath112 in @xmath128 , then @xmath103 is the parent of @xmath115 in @xmath128 . by the fact ( a ) and ( c ) of lemma  [ sc_2 ]\n, each internal node in @xmath272 or @xmath365 is not visible .\nthus , @xmath366 or @xmath367 is an edge .\notherwise , the two children of @xmath110 are not visible , contradicting @xmath27 is stable - child network .    if @xmath366 is an edge in @xmath27 , then @xmath368 and hence @xmath343 , a contradiction . if @xmath367 is an edge , then @xmath369 . since @xmath110 is not a reticulation , by the remark at the end of the proof of ( a ) , @xmath370\n. therefore , @xmath343 .\nthis is impossible .    *\ncase 2*. @xmath110 is a node in the path @xmath116 .    without loss of generality\n, we can assume @xmath110 is lower than @xmath114 if @xmath114 is also in @xmath116 .\nwe claim that @xmath103 and all the internal nodes in @xmath371 are not visible .\nlet @xmath8 be either @xmath103 or an internal node in @xmath371 .\nif @xmath114 is in @xmath372 , the case is symmetric to case 1 .\nso there are two cases to consider : either @xmath114 is below @xmath115 ( figure  [ fig9]b ) , or @xmath114 is not below @xmath110 ( figure  [ fig9]c ) . in both cases , the reticulation node\nset @xmath373 are below the node @xmath8 , and satisfies the condition in lemma  [ lemma22 ] , so @xmath8 is not visible with respect to each leaf @xmath41 below either @xmath115 or @xmath112 . for any leaf @xmath41 not below @xmath115 or @xmath112 ,\nthe path @xmath208 avoids @xmath8 . hence @xmath8 is not visible in @xmath27 .\nthere are some observations from this result .\nfirst , there is no non - cross edge @xmath183 jumping over @xmath110 , otherwise @xmath111 is not visible .\nsecond , a child of @xmath110 in @xmath116 is not visible , and so the cross path @xmath272 is simply an edge .\notherwise by the fact ( a ) of lemma  [ sc_2 ] , the two children of @xmath110 are both not visible in @xmath27 .    by ( b ) of lemma  [ sc_2 ] , either @xmath374 or @xmath375 is an edge in @xmath128 .\nif @xmath103 is the parent of @xmath115 in @xmath128 , then @xmath376 according to eqn .\n( [ scformula ] ) . by ( a ) ,\n@xmath343 . if @xmath103 is the parent of @xmath112 , @xmath369 and @xmath370 according to the remark at the end of the proof of ( a ) . taken together ,\nboth facts imply that @xmath343 , which contradicts the assumption that @xmath341 .\n* case 3*. @xmath110 is below @xmath112 and @xmath114 is below @xmath115 ( figure  [ fig9]d ) .\nthis case is impossible since there is a cycle in @xmath27 , contradicting @xmath27 is acyclic .    to sum up\n, @xmath341 implies that either ( i ) or ( ii ) is true .\nbut in both cases , if we let @xmath8 be either @xmath103 or any internal node in @xmath116 , the set of reticulations @xmath294 are below @xmath8 and satisfies the condition in lemma  [ lemma22 ] .\ntherefore , @xmath103 and any internal node of @xmath116 are not visible .\nthere are two observations from this result .\nfirst , @xmath271 because there is no cross path that ends at @xmath116 .\n( otherwise the cross path enters @xmath116 at a reticulation that is not visible in @xmath27 . ) second , the child of @xmath267 in @xmath268 is not visible .    clearly , @xmath377 if there is no cross path that ends at @xmath297 .\nassume there is a cross path @xmath378 from @xmath379 to @xmath380 with @xmath380 in @xmath297 . by ( c ) of lemma  [ sc_2\n] , each internal node in @xmath381 is not visible .\nbut the child of @xmath267 in @xmath285 is not visible .\nhence , @xmath382 is an edge in @xmath128 .\nthen , by the remark in the end of proof of ( a ) , @xmath342 .\n( d ) if @xmath270 , then @xmath103 is an ancestor of any degree-3 node in @xmath128 . since @xmath27 is acyclic\n, there does not exist any cross path @xmath383 such that @xmath384 for @xmath145 and @xmath385 .\nhence , @xmath147 .    if @xmath341 , then , every node in @xmath78 is not visible in @xmath27 , shown in ( c ) .\nthis contradicts that @xmath78 contains the network root @xmath28 and @xmath28 is visible with respect to each leaf in @xmath27 .    .\n( * a * ) @xmath110 is between @xmath103 and @xmath112 .\n( * b * ) @xmath110 is the trivial path @xmath116 entering @xmath103 , and @xmath114 is below @xmath115 .\n( * c * ) @xmath110 is in @xmath116 , and @xmath114 is not below @xmath115 .\n( * d * ) @xmath110 is below @xmath114 and @xmath114 is also below @xmath115 .\nthis is impossible in a network [ fig9],scaledwidth=80.0% ]    let @xmath27 be a stable - child network with @xmath0 leaves .\nthen , @xmath386    let @xmath150 denote the set of the @xmath151 internal nodes of degree 3 in @xmath128 . define @xmath387 by proposition  [ sc_3 ] ( b ) , @xmath388 .\nhence , @xmath389 and thus @xmath390 .\nlet @xmath159 be the start node of the trivial path entering @xmath9 in @xmath128 . by proposition  [ sc_3 ] ( c ) and ( d ) , if @xmath391 , then @xmath392 for each @xmath393 . by proposition  [ sc_3 ] ( c ) , under the mapping @xmath162 , at most two nodes in @xmath394\nare mapped to the same node in @xmath164 , and only one node can be mapped to @xmath395 .\nthus , @xmath396 since @xmath147 , the above inequality implies that @xmath397\\\\                  & = &      \\sum_{i=0}^{10 } i |v_i| \\\\                  & \\leq &   |v_1|+2|v_2|+3|v_3|+4|v_4| +   7 \\sum_{i=5}^{10 }   |v_i| +   |v_8| + 2|v_9| + 3|v_{10}| ) \\\\          & \\leq &   |v_1|+2|v_2|+3|v_3|+4|v_4| +   7 \\sum_{i=5}^{10 }   |v_i| + 6 |v_0| +\n3\\sum_{i=1}^4 |v_i|   \\\\                          & = & 6|v_0|+4|v_1|+5|v_2|+6|v_3|+7|v_4| +   7 \\sum_{i=5}^{10 }   |v_i| \\\\                  & \\leq &    7\\sum_{i=0}^{10 } |v_i|\\\\                  & = &       7(n-1 ) .\n\\end{aligned}\\ ] ]\nwe have established the tight upper bounds for the sizes of galled , nearly - stable , and stable - child networks .\nsince the number of internal tree nodes is equal to the number of leaves plus the number of reticulation nodes in a binary network , we can summarize our results in table  [ table1 ] . without question , these tight bounds provide insight to the study of combinatorial and algorithmic aspects of the network classes defined by visibility property .\n.the tight upper bounds on the sizes of binary networks with @xmath0 leaves defined by visibility property . the bound for reticulation visible network\nis found in bordewich and semple(2015 ) .\n[ table1 ] [ cols=\"<,^,^\",options=\"header \" , ]              gambette p , gunawan adm , labarre a , vialette s , zhang l ( 2015 ) locating a tree in a phylogenetic network in quadratic time , in proc .\nof the 19th intl conf .\nres . in comput .\n( recomb ) , pp .\n96107 , warsaw , poland .",
    "section_names": " introduction\n basic concept\n reticulation visible networks\n galled networks\n nearly-stable network\n stable-child network\n conclusion",
    "origin": "Human"
}